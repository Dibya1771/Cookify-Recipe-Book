{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsank\\\\OneDrive\\\\Desktop\\\\Recipe-Book\\\\Client\\\\app_recipe\\\\src\\\\Components\\\\Pagination.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// const Pagination=({item,itemsPerPage,totalItems ,paginate,handleLogic})=>{\n// const pageNumbers=[];\n\n// for( let i=1;i<=Math.ceil(totalItems/itemsPerPage);i++)\n// {\n//     pageNumbers.push(i);\n// }\n\n// return(\n//     <nav className='pagination'>\n//         <ul>\n//             {pageNumbers.map(number=>(\n//                 <li key={number}>\n//                     <button  onClick={()=>{\n//                         paginate(number)\n//                         handleLogic(item,number)\n//                     }}>\n//                         {number}\n//                     </button>\n//                 </li>\n//             ))}\n//         </ul>\n//     </nav>\n// );\n// }\n// // const getData = async () => {\n// //     let url = `http://localhost:8080/user?_page=${currentPage}&_limit=10`;\n// //     if (searchQuery) {\n// //       url += `&q=${searchQuery}`;\n// //     }\n\n// //     const response = await fetch(url, {\n// //       method: \"GET\",\n// //     });\n\n// //     const data = await response.json();\n// //     const totalCount = response.headers.get(\"X-Total-Count\");\n// //     const totalPages = Math.ceil(totalCount / 10);\n\n// //     setArr(data);\n// //     setTotalPages(totalPages);\n// //   };\n\n// //   <div className=\"pagination\">\n// //   {Array.from({ length: totalPages }, (_, index) => (\n// //       <button\n// //          key={index + 1}\n// //          id='pagination_button'\n// //          onClick={() => handlePageChange(index + 1)}\n// //          className={currentPage === index + 1 ? \"active\" : \"pageNumber\"}\n// //        >\n// //          {index + 1}\n// //        </button>\n// //      ))}\n// //    </div>\n// // export default Pagination;\n// // import React from 'react'\n\n// // const Pagination = () => {\n// //   return (\n// //     <div>Pagination</div>\n// //   )\n// // }\n\n// export default Pagination\n\nimport React, { useState, useEffect } from 'react';\nimport MealItem from './MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = _ref => {\n  _s();\n  let {\n    data,\n    itemsPerPage\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = Math.ceil(data.length / itemsPerPage);\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n\n  // Slice data based on current page and items per page\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const slicedData = data.slice(startIndex, endIndex);\n\n  // Handle page change\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: !slicedData ? \"Not Found\" : slicedData.map(item => {\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => {\n            navigate(`/${item.idMeal}`);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.strMealThumb,\n            alt: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, item.idMeal, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(number),\n        disabled: currentPage === number,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 13\n  }, this);\n};\n_s(Pagination, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","useEffect","MealItem","jsxDEV","_jsxDEV","Pagination","_ref","_s","data","itemsPerPage","currentPage","setCurrentPage","totalPages","Math","ceil","length","pageNumbers","i","push","startIndex","endIndex","slicedData","slice","handlePageChange","pageNumber","children","className","map","item","onClick","navigate","idMeal","src","strMealThumb","alt","fileName","_jsxFileName","lineNumber","columnNumber","strMeal","number","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nsank/OneDrive/Desktop/Recipe-Book/Client/app_recipe/src/Components/Pagination.jsx"],"sourcesContent":["    // import React from 'react';\r\n    // const Pagination=({item,itemsPerPage,totalItems ,paginate,handleLogic})=>{\r\n    // const pageNumbers=[];\r\n\r\n    // for( let i=1;i<=Math.ceil(totalItems/itemsPerPage);i++)\r\n    // {\r\n    //     pageNumbers.push(i);\r\n    // }\r\n\r\n\r\n    // return(\r\n    //     <nav className='pagination'>\r\n    //         <ul>\r\n    //             {pageNumbers.map(number=>(\r\n    //                 <li key={number}>\r\n    //                     <button  onClick={()=>{\r\n    //                         paginate(number)\r\n    //                         handleLogic(item,number)\r\n    //                     }}>\r\n    //                         {number}\r\n    //                     </button>\r\n    //                 </li>\r\n    //             ))}\r\n    //         </ul>\r\n    //     </nav>\r\n    // );\r\n    // }\r\n    // // const getData = async () => {\r\n    // //     let url = `http://localhost:8080/user?_page=${currentPage}&_limit=10`;\r\n    // //     if (searchQuery) {\r\n    // //       url += `&q=${searchQuery}`;\r\n    // //     }\r\n    \r\n    // //     const response = await fetch(url, {\r\n    // //       method: \"GET\",\r\n    // //     });\r\n    \r\n    // //     const data = await response.json();\r\n    // //     const totalCount = response.headers.get(\"X-Total-Count\");\r\n    // //     const totalPages = Math.ceil(totalCount / 10);\r\n    \r\n    // //     setArr(data);\r\n    // //     setTotalPages(totalPages);\r\n    // //   };\r\n\r\n\r\n    // //   <div className=\"pagination\">\r\n    // //   {Array.from({ length: totalPages }, (_, index) => (\r\n    // //       <button\r\n    // //          key={index + 1}\r\n    // //          id='pagination_button'\r\n    // //          onClick={() => handlePageChange(index + 1)}\r\n    // //          className={currentPage === index + 1 ? \"active\" : \"pageNumber\"}\r\n    // //        >\r\n    // //          {index + 1}\r\n    // //        </button>\r\n    // //      ))}\r\n    // //    </div>\r\n    // // export default Pagination;\r\n    // // import React from 'react'\r\n\r\n    // // const Pagination = () => {\r\n    // //   return (\r\n    // //     <div>Pagination</div>\r\n    // //   )\r\n    // // }\r\n\r\n    // export default Pagination\r\n\r\n\r\n\r\n    \r\n    import React, { useState, useEffect } from 'react';\r\n    import MealItem from './MealItem';\r\n    const Pagination = ({ data, itemsPerPage }) => {\r\n        const [currentPage, setCurrentPage] = useState(1);\r\n        const totalPages = Math.ceil(data.length / itemsPerPage);\r\n    \r\n        const pageNumbers=[]\r\n        for( let i=1;i<=totalPages;i++)\r\n            {\r\n                pageNumbers.push(i);\r\n            }\r\n    \r\n        // Slice data based on current page and items per page\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        const slicedData = data.slice(startIndex, endIndex);\r\n      \r\n        // Handle page change\r\n        const handlePageChange = (pageNumber) => {\r\n          setCurrentPage(pageNumber);\r\n        };\r\n      \r\n        return (\r\n          \r\n            <div>\r\n              <div className=\"container\">\r\n            \r\n                    {/* {\r\n                        <MealItem data={slicedData} />\r\n                    } */}\r\n\r\n{\r\n            (!slicedData)?\"Not Found\" :slicedData.map(item=>{\r\n    \r\n                    <div className='card' key={item.idMeal} onClick={()=>{navigate(`/${item.idMeal}`)}}>\r\n                    <img src={item.strMealThumb} alt='Loading'/>\r\n                    <h3>{item.strMeal}</h3>\r\n                    </div>\r\n                \r\n            })\r\n        }\r\n\r\n                </div>\r\n            \r\n      \r\n            {/* Render pagination buttons */}\r\n            <div>\r\n              {pageNumbers.map((number)=>(\r\n                        <button key={number} onClick={()=>\r\n                          handlePageChange(number)}\r\n                          disabled={currentPage === number}>\r\n                            {number}\r\n                        </button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n      export default Pagination;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}