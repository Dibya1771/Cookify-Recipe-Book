{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsank\\\\OneDrive\\\\Desktop\\\\Recipe-Book\\\\Client\\\\app_recipe\\\\src\\\\Components\\\\Pagination.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = _ref => {\n  let {\n    itemsPerPage,\n    totalItems,\n    paginate,\n    hl\n  } = _ref;\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"pagination\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            paginate(number);\n            handleLogic;\n          },\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n// const getData = async () => {\n//     let url = `http://localhost:8080/user?_page=${currentPage}&_limit=10`;\n//     if (searchQuery) {\n//       url += `&q=${searchQuery}`;\n//     }\n\n//     const response = await fetch(url, {\n//       method: \"GET\",\n//     });\n\n//     const data = await response.json();\n//     const totalCount = response.headers.get(\"X-Total-Count\");\n//     const totalPages = Math.ceil(totalCount / 10);\n\n//     setArr(data);\n//     setTotalPages(totalPages);\n//   };\n\n//   <div className=\"pagination\">\n//   {Array.from({ length: totalPages }, (_, index) => (\n//       <button\n//          key={index + 1}\n//          id='pagination_button'\n//          onClick={() => handlePageChange(index + 1)}\n//          className={currentPage === index + 1 ? \"active\" : \"pageNumber\"}\n//        >\n//          {index + 1}\n//        </button>\n//      ))}\n//    </div>\n// export default Pagination;\n// import React from 'react'\n\n// const Pagination = () => {\n//   return (\n//     <div>Pagination</div>\n//   )\n// }\n\n// export default Pagination\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","_ref","itemsPerPage","totalItems","paginate","hl","pageNumbers","i","Math","ceil","push","className","children","map","number","onClick","handleLogic","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nsank/OneDrive/Desktop/Recipe-Book/Client/app_recipe/src/Components/Pagination.jsx"],"sourcesContent":["import React from 'react';\r\nconst Pagination=({itemsPerPage,totalItems ,paginate,hl})=>{\r\nconst pageNumbers=[];\r\n\r\nfor( let i=1;i<=Math.ceil(totalItems/itemsPerPage);i++)\r\n{\r\n    pageNumbers.push(i);\r\n}\r\n\r\n\r\nreturn(\r\n    <nav className='pagination'>\r\n        <ul>\r\n            {pageNumbers.map(number=>(\r\n                <li key={number}>\r\n                    <button  onClick={()=>{\r\n                        paginate(number)\r\n                        handleLogic\r\n                    }}>\r\n                        {number}\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </nav>\r\n);\r\n}\r\n// const getData = async () => {\r\n//     let url = `http://localhost:8080/user?_page=${currentPage}&_limit=10`;\r\n//     if (searchQuery) {\r\n//       url += `&q=${searchQuery}`;\r\n//     }\r\n  \r\n//     const response = await fetch(url, {\r\n//       method: \"GET\",\r\n//     });\r\n  \r\n//     const data = await response.json();\r\n//     const totalCount = response.headers.get(\"X-Total-Count\");\r\n//     const totalPages = Math.ceil(totalCount / 10);\r\n  \r\n//     setArr(data);\r\n//     setTotalPages(totalPages);\r\n//   };\r\n\r\n\r\n//   <div className=\"pagination\">\r\n//   {Array.from({ length: totalPages }, (_, index) => (\r\n//       <button\r\n//          key={index + 1}\r\n//          id='pagination_button'\r\n//          onClick={() => handlePageChange(index + 1)}\r\n//          className={currentPage === index + 1 ? \"active\" : \"pageNumber\"}\r\n//        >\r\n//          {index + 1}\r\n//        </button>\r\n//      ))}\r\n//    </div>\r\n// export default Pagination;\r\n// import React from 'react'\r\n\r\n// const Pagination = () => {\r\n//   return (\r\n//     <div>Pagination</div>\r\n//   )\r\n// }\r\n\r\n// export default Pagination\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,UAAU,GAACC,IAAA,IAA0C;EAAA,IAAzC;IAACC,YAAY;IAACC,UAAU;IAAEC,QAAQ;IAACC;EAAE,CAAC,GAAAJ,IAAA;EACxD,MAAMK,WAAW,GAAC,EAAE;EAEpB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEC,IAAI,CAACC,IAAI,CAACN,UAAU,GAACD,YAAY,CAAC,EAACK,CAAC,EAAE,EACtD;IACID,WAAW,CAACI,IAAI,CAACH,CAAC,CAAC;EACvB;EAGA,oBACIR,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvBb,OAAA;MAAAa,QAAA,EACKN,WAAW,CAACO,GAAG,CAACC,MAAM,iBACnBf,OAAA;QAAAa,QAAA,eACIb,OAAA;UAASgB,OAAO,EAAEA,CAAA,KAAI;YAClBX,QAAQ,CAACU,MAAM,CAAC;YAChBE,WAAW;UACf,CAAE;UAAAJ,QAAA,EACGE;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GANJN,MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAAC,EAAA,GAlEMrB,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}